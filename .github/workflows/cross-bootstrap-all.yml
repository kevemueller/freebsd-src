name: Cross-build All

on:
  push:
    branches:
      - 'releng/14.1'
      - kbsd
  pull_request:
    branches:
      - 'releng/14.1'
      - kbsd
#  workflow_dispatch:

permissions:
  contents: read

jobs:
  build:
    name: ${{ matrix.target_arch }} ${{ matrix.os }} (${{ matrix.compiler }})
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        target_arch: 
          - amd64
          - aarch64
        os: 
          - macos-latest
          - ubuntu-24.04
        include:
          - os: ubuntu-24.04
            compiler: clang-18
            pkgs: libarchive-dev clang-18 lld-18
            cross-bindir: /usr/lib/llvm-18/bin
            cross-ld: /usr/lib/llvm-18/bin/ld.lld
          - os: macos-latest
            compiler: clang-18
            # llbm/llvm@19 too strict to compile kernel on amd64
            pkgs: libarchive llvm@18 lld
            cross-bindir: /opt/homebrew/opt/llvm@18/bin
            cross-ld: /opt/homebrew/opt/lld/bin/ld.lld
          - target_arch: amd64
            target: amd64
          - target_arch: aarch64
            target: arm64
    steps:
      - name: checkout kbsd
        uses: actions/checkout@v4
        with:
          ref: kbsd
          path: kbsd
      - name: checkout 14.1
        uses: actions/checkout@v4
        with:
          ref: 'releng/14.1'
      - name: install packages (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update --quiet || true
          sudo apt-get -yq --no-install-suggests --no-install-recommends install ${{ matrix.pkgs }}
      - name: install packages (macOS)
        if: runner.os == 'macOS'
        run: |
          brew update --quiet || true
          brew install ${{ matrix.pkgs }} || true
      - name: create environment
        run: |
          echo "EXTRA_BUILD_ARGS=--cross-bindir=${{ matrix.cross-bindir }}" >> $GITHUB_ENV
          echo "XLD=${{ matrix.cross-ld}}" >> $GITHUB_ENV
          mkdir -p ../build
          echo "MAKEOBJDIRPREFIX=${PWD%/*}/build" >> $GITHUB_ENV
          echo "NPROC=`getconf _NPROCESSORS_ONLN 2>/dev/null || getconf NPROCESSORS_ONLN 2>/dev/null || echo 1`" >> $GITHUB_ENV

      - name: show environment
        run: |
          echo Running on $(uname -a)
          echo "CWD = $PWD"
          echo "GITHUB_WORKSPACE = $GITHUB_WORKSPACE"
          echo Using EXTRA_BUILD_ARGS=${EXTRA_BUILD_ARGS}
          echo Using XLD=${XLD}
          echo Using MAKEOBJDIRPREFIX=${MAKEOBJDIRPREFIX}
          echo Using NPROC=${NPROC}
          echo Using EXTRA_MAKE_ARGS=${EXTRA_MAKE_ARGS}
          find .. -type d -depth 3
          echo kBSD in $PWD/kbsd
          find kbsd -depth 2
          echo FreeBSD releng/14.1 in $PWD/freebsd-src
          find freebsd-src -depth 2
      
      - name: bootstrap bmake
        run: ./tools/build/make.py --debug $EXTRA_BUILD_ARGS TARGET=${{ matrix.target }} TARGET_ARCH=${{ matrix.target_arch }} -n
      - name: make kernel-toolchain
        run: ./tools/build/make.py --debug $EXTRA_BUILD_ARGS TARGET=${{ matrix.target }} TARGET_ARCH=${{ matrix.target_arch }} -s -j$NPROC kernel-toolchain  -DWITH_DISK_IMAGE_TOOLS_BOOTSTRAP
      # - name: make buildworld
      #   run: ./tools/build/make.py --debug $EXTRA_BUILD_ARGS TARGET=${{ matrix.target }} TARGET_ARCH=${{ matrix.target_arch }} buildworld -s -j$NPROC $EXTRA_MAKE_ARGS
      - name: make buildkernel
        run: ./tools/build/make.py --debug $EXTRA_BUILD_ARGS TARGET=${{ matrix.target }} TARGET_ARCH=${{ matrix.target_arch }} -s -j$NPROC buildkernel KERNCONF=GENERIC NO_MODULES=yes $EXTRA_MAKE_ARGS
    
      - name: tar build-artefacts
        run: tar -cvf ../build-${{ matrix.target_arch }}-${{ matrix.os }}-${{ matrix.compiler }}.tar -C ../build .
          
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.target_arch }}-${{ matrix.os }}-${{ matrix.compiler }}
          path: ../build-${{ matrix.target_arch }}-${{ matrix.os }}-${{ matrix.compiler }}.tar
          retention-days: 10
          overwrite: true  